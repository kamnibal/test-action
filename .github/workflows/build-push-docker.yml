# Nombre del workflow que aparecerá en la pestaña "Actions" de GitHub
name: Construir y Publicar Imagen Docker

# Disparador (Trigger): Este workflow se ejecutará en cada 'push' a la rama 'main'
on:
  push:
    branches: [ "main" ]

# Trabajos (Jobs): Define las tareas que se van a ejecutar.
jobs:
  build-and-push:
    # La máquina virtual donde se ejecutará el trabajo
    runs-on: ubuntu-latest

    # Permisos necesarios para que el workflow pueda interactuar con el registro de paquetes
    permissions:
      contents: read
      packages: write

    # Pasos (Steps) que se ejecutarán secuencialmente
    steps:
      # 1. Clona tu repositorio en la máquina virtual
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Inicia sesión en el Registro de Contenedores de GitHub (GHCR)
      # Usa un GITHUB_TOKEN que GitHub genera automáticamente para mayor seguridad
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 3. Extrae metadatos (como las etiquetas de la imagen)
      # Esto crea etiquetas útiles automáticamente, como una para el commit específico y 'latest'
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/mi-pagina-web

      # 4. Construye la imagen de Docker y la sube (push) al registro
      # Usa las etiquetas generadas en el paso anterior
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}